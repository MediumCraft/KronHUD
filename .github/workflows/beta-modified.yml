on:
  workflow_dispatch:
    inputs:
      previousVersion:
        description: 'Previous Version (Do not include v prefix, must be same as the last version tag! Example: 1.4.1)'
        required: true
      version:
        description: 'Version (Do not include v prefix! Example: 1.4.2)'
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Fetch tags
        run: git fetch --tags
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      #- name: Upload to websites
        #run: ./gradlew publishThirdParty --stacktrace -PlastTag="v${{ github.event.inputs.previousVersion }}" -PcurrentTag="v${{ github.event.inputs.version }}"
        #if: |
          #!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.pull_request.title, '[ci skip]')
        #env:
          #modrinth_token: ${{ secrets.MODRINTH_TOKEN }}
          #curseforge_token: ${{ secrets.CURSEFORGE_TOKEN }}
          #github_token: ${{ secrets.GH_API_KEY }}
          #discord_release_webhook: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
      # Instead of uploading to websites, release on GitHub.com
      - name: Capture build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
      
      - name: Get Commit SHA
        id: short_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Release Files
        uses: softprops/action-gh-release@v1
        with: 
          token: ${{ secrets.RELEASE_KEY }}
          files: |
            build/libs/*.jar
          tag_name: commit-${{ steps.short_sha.outputs.sha_short }}
          name: KronHUD Automation Compile ${{ steps.short_sha.outputs.sha_short }}
          body: |
            Commit ${{ steps.short_sha.outputs.sha_short }}
            This is an automated release, it have not been tested yet.
            This release will trigger whenever a Git push happens to the project.
            It will also upload an artifact. But artifacts require an GitHub account.
          generate_release_notes: true
        env:
          GITHUB_REPOSITORY: MediumCraft/KronHUD
